// <auto-generated />
using System;
using GameService.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameService.Infrastructure.Migrations
{
    [DbContext(typeof(GameServiceDbContext))]
    partial class GameServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameService.Domain.Entities.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("PublisherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("GameService.Domain.Entities.GameGenre", b =>
                {
                    b.Property<Guid>("GameId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenreId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("GameId", "GenreId");

                    b.HasIndex("GenreId");

                    b.ToTable("GameGenre");
                });

            modelBuilder.Entity("GameService.Domain.Entities.Genre", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Genres");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d17c7345-36d2-48c7-8000-1be1231e84e5"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Free To Play"
                        },
                        new
                        {
                            Id = new Guid("a83ff907-1c4b-45ed-90bb-b1332c620e5f"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Early Access"
                        },
                        new
                        {
                            Id = new Guid("7177b6e3-582d-47ad-8cc0-1809b9410db0"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Action"
                        },
                        new
                        {
                            Id = new Guid("ee983b67-56ad-4f92-8125-9c1c740e76b9"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = new Guid("b9fda6d2-8d9d-4a5e-975d-78b8ef3c5667"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Casual"
                        },
                        new
                        {
                            Id = new Guid("a3a1e6cf-325f-4dbd-b3b0-b45f4a77e416"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Indie"
                        },
                        new
                        {
                            Id = new Guid("c5c8f2a3-2c68-47f2-9507-9f90639a1d8b"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Massively Multiplayer"
                        },
                        new
                        {
                            Id = new Guid("a51661ff-6012-42db-9cf9-5c68cfa7f038"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Racing"
                        },
                        new
                        {
                            Id = new Guid("ed8bc02f-9cde-46b7-b035-cbd58f788fc4"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "RPG"
                        },
                        new
                        {
                            Id = new Guid("0535780e-307b-4046-9b59-e937b6a8c5c1"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = new Guid("f51a7796-7a07-47cc-8c99-e105f1d7c0e0"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Sports"
                        },
                        new
                        {
                            Id = new Guid("cf3d6d98-3b93-4d7f-aed6-e24e1d3ecf33"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Strategy"
                        });
                });

            modelBuilder.Entity("GameService.Domain.Entities.Publisher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c68fe36e-746b-4d82-a9fc-e9fd16d2f6f2"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Valve"
                        },
                        new
                        {
                            Id = new Guid("cf8f595f-bb19-4c0d-b5b4-bfc859f580fb"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Electronic Arts"
                        },
                        new
                        {
                            Id = new Guid("22ed2c3e-7b7b-4f67-8a4f-4c79b7cf3209"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = new Guid("a0914389-bd9a-4737-a45d-b54b378b6d56"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bethesda Softworks"
                        },
                        new
                        {
                            Id = new Guid("3f6e8791-10a0-4317-9879-79a1d3b18f0e"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "CD Projekt"
                        },
                        new
                        {
                            Id = new Guid("dbf5bfa1-3d7d-47e4-883f-42b1c3184e92"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Activision"
                        },
                        new
                        {
                            Id = new Guid("c7a86de5-b230-41e2-b0fc-bb75be1301bc"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Take-Two Interactive"
                        },
                        new
                        {
                            Id = new Guid("595167fa-d015-44f3-8a27-0db55cb2efaf"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Square Enix"
                        },
                        new
                        {
                            Id = new Guid("e0c0f222-d9de-4ae7-bf0b-5d280473b8b4"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Bandai Namco Entertainment"
                        },
                        new
                        {
                            Id = new Guid("7623a287-6012-429b-b53a-243da6e5f3b2"),
                            CreatedDate = new DateTime(2025, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Paradox Interactive"
                        });
                });

            modelBuilder.Entity("GameService.Domain.Entities.Game", b =>
                {
                    b.HasOne("GameService.Domain.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GameService.Domain.Entities.GameGenre", b =>
                {
                    b.HasOne("GameService.Domain.Entities.Game", "Game")
                        .WithMany("GameGenres")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameService.Domain.Entities.Genre", "Genre")
                        .WithMany("GameGenres")
                        .HasForeignKey("GenreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("GameService.Domain.Entities.Game", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("GameService.Domain.Entities.Genre", b =>
                {
                    b.Navigation("GameGenres");
                });

            modelBuilder.Entity("GameService.Domain.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
